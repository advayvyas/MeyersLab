numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot(cor_matrix, method = "number", type = "lower", tl.col = "black", tl.srt = 90)
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot(cor_matrix, method = "color", type = "lower", tl.col = "black", tl.srt = 90)
corrplot(cor_matrix, method = "color", type = "lower", tl.col = "black", tl.srt = 90, addgrid.col = TRUE)
corrplot(cor_matrix, method = "number", type = "lower",
add = TRUE, diag = FALSE)
corrplot(cor_matrix, method = "color", type = "lower",
col = colorRampPalette(c("blue", "white", "red"))(200),
tl.col = "black", tl.srt = 90)
corrplot(cor_matrix, method = "number", type = "lower",
add = TRUE, diag = FALSE)
library(ggplot2)
library(reshape2)
install.packages("reshape2")
library(ggplot2)
library(reshape2)
melted_cor = melt(cor_matrix)
ggplot(melted_cor, aes(x = Var1, y = Var2, fill = value)) +
geom_tile(color = "white") +
geom_text(aes(label = round(value, 2)), size = 4) +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1)) +
theme_minimal() +
coord_fixed() +
labs(title = "Correlation Heatmap", x = "", y = "")
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot(cor_matrix, method = "color", type = "lower", tl.col = "black", tl.srt = 90, addgrid.col = TRUE)
library(ggplot2)
library(reshape2)
melted_cor = melt(cor_matrix)
ggplot(melted_cor, aes(x = Var1, y = Var2, fill = value)) +
geom_tile(color = "white") +
geom_text(aes(label = round(value, 2)), size = 4) +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1)) +
theme_minimal() +
coord_fixed() +
labs(title = "Correlation Heatmap", x = "", y = "")
library(corrplot)
# Compute correlation matrix
cor_matrix = cor(mtcars)
# Step 1: Plot colored tiles
corrplot(cor_matrix, method = "color", type = "lower",
col = colorRampPalette(c("blue", "white", "red"))(200),
tl.col = "black", tl.srt = 45, number.cex = 0.7,
addCoef.col = NULL)  # important: do NOT use addCoef.col here
# Step 2: Add numbers
corrplot(cor_matrix, method = "number", type = "lower",
add = TRUE, diag = FALSE, number.cex = 0.7)
corrplot.mixed(cor_matrix, tl.col = "black", tl.srt = 90, addgrid.col = TRUE, upper="color",lower="number")
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.srt = 90, addgrid.col = TRUE, upper="color", lower="number")
?corrplot.mixed
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "d", addgrid.col = TRUE, upper="color", lower="number")
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number")
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="u")
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k))
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city))
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), pch=21)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=20)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=10)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=5)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=2)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=3)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=3) + geom_smooth()
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=3) + geom_smooth(aes(x=coverage_rate, y=patients_per_100k))
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=3) + stat_smooth(method = "lm", col = "red")
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=3) + stat_smooth(aes(x=coverage_rate, y=patients_per_100k), method = "lm", col = "red")
?stat_smooth
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=2) + stat_smooth(aes(x=coverage_rate, y=patients_per_100k), method = "lm", col = "black", se=FALSE)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=2) + stat_smooth(aes(x=coverage_rate, y=patients_per_100k, col=city), method = "lm", col = "black", se=FALSE)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=2) + stat_smooth(aes(x=coverage_rate, y=patients_per_100k), method = "lm", col = "black", se=FALSE)
ggplot(first_spike) + geom_point(aes(x=coverage_rate, y=patients_per_100k, col=city), size=2) + stat_smooth(aes(x=coverage_rate, y=patients_per_100k), method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + stat_smooth(method = "lm", col = "black", se=FALSE)
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
ggplot(city_trend_major %>% filter(quarter == "2022Q4" | quarter == "2024Q1")) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k, fill = quarter), position = position_dodge2(preserve = "single"), col="black") +
labs(title = "Flu Patients per 100,000 during Spikes", x = "City", y = "Flu Patients per 100,000", fill = "Quarter") + theme_bw()
city_health = read.csv("../texas_cityhealth.csv") %>% pivot_wider(names_from = Metric, values_from = Value) # 2022
colnames(city_health)[1] = "city"
flu_vax = read.csv("../texas_flu_vax.csv") # 2022
first_spike = first_spike %>% left_join(city_health) %>% left_join(flu_vax[,2:3])
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "")
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "")
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "")
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "")
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", "Coverage Rate", "Patients per 100,000", col = "City")
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", "Routine Checkup (%)", "Patients per 100,000", col = "City")
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", "Coverage Rate", "Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", "Routine Checkup (%)", "Patients per 100,000", col = "City")
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE)
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", x=  "Routine Checkup (%)", y ="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x = "Uninsured (%)", y = "Patients per 100,000", col = "City") + theme_bw()
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
ggplot(city_trend_major %>% filter(quarter == "2022Q4" | quarter == "2024Q1")) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k, fill = quarter), position = position_dodge2(preserve = "single"), col="black") +
labs(title = "Flu Patients per 100,000 during Spikes", x = "City", y = "Flu Patients per 100,000", fill = "Quarter") + theme_bw()
knitr::opts_chunk$set(fig.height=8, fig.width=8, fig.align = "center", warning=FALSE, echo=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60))
library(dplyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(patchwork)
library(corrplot)
city_trend_major = read.csv("../texas_city_trend_major.csv")
colnames(city_trend_major) = c("city", "year", "quarter", "total_patients", "population", "patients_per_100k")
ggplot(city_trend_major, aes(x = quarter, y = patients_per_100k, group = city, color = city)) +
geom_line(linewidth = 1,) +
geom_point() +
labs(title = "Flu patients per 100,000 over time by city", x = "Quarter", y = "Patients per 100,000", color = "City") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme_bw()
first_spike = city_trend_major %>% filter(quarter == "2022Q4") %>% select(city, total_patients, population, patients_per_100k)
second_spike = city_trend_major %>% filter(quarter == "2024Q1") %>% select(city, total_patients, population, patients_per_100k)
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
ggplot(city_trend_major %>% filter(quarter == "2022Q4" | quarter == "2024Q1")) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k, fill = quarter), position = position_dodge2(preserve = "single"), col="black") +
labs(title = "Flu Patients per 100,000 during Spikes", x = "City", y = "Flu Patients per 100,000", fill = "Quarter") + theme_bw()
city_health = read.csv("../texas_cityhealth.csv") %>% pivot_wider(names_from = Metric, values_from = Value) # 2022
colnames(city_health)[1] = "city"
flu_vax = read.csv("../texas_flu_vax.csv") # 2022
first_spike = first_spike %>% left_join(city_health) %>% left_join(flu_vax[,2:3])
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", x=  "Routine Checkup (%)", y ="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Uninsured (%) vs. Flu Patients per 100,000", x = "Uninsured (%)", y = "Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=TRUE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) + geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", x=  "Routine Checkup (%)", y ="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=TRUE) +
labs(title = "Uninsured (%) vs. Flu Patients per 100,000", x = "Uninsured (%)", y = "Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", x=  "Routine Checkup (%)", y ="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Uninsured (%) vs. Flu Patients per 100,000", x = "Uninsured (%)", y = "Patients per 100,000", col = "City") + theme_bw()
city_trend_major = read.csv("../texas_city_trend_major.csv")
colnames(city_trend_major) = c("city", "year", "quarter", "total_patients", "population", "patients_per_100k")
city_trend_major = read.csv("../texas_city_trend_major.csv")
colnames(city_trend_major) = c("city", "year", "quarter", "total_patients", "population", "patients_per_100k")
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
ggplot(city_trend_major %>% filter(quarter == "2022Q4" | quarter == "2024Q1")) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k, fill = quarter), position = position_dodge2(preserve = "single"), col="black") +
labs(title = "Flu Patients per 100,000 during Spikes", x = "City", y = "Flu Patients per 100,000", fill = "Quarter") + theme_bw()
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
first_spike[c(2:5, 7:8),]
ggplot(first_spike[c(2:5, 7:8),], aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
numeric_data = first_spike[c(2:5, 7:8),[sapply(first_spike[c(2:5, 7:8),, is.numeric)]
first_spike = first_spike[c(2:5, 7:8),]
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
knitr::opts_chunk$set(fig.height=8, fig.width=8, fig.align = "center", warning=FALSE, echo=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60))
library(dplyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(patchwork)
library(corrplot)
city_trend_major = read.csv("../texas_city_trend_major.csv")
colnames(city_trend_major) = c("city", "year", "quarter", "total_patients", "population", "patients_per_100k")
ggplot(city_trend_major, aes(x = quarter, y = patients_per_100k, group = city, color = city)) +
geom_line(linewidth = 1,) +
geom_point() +
labs(title = "Flu patients per 100,000 over time by city", x = "Quarter", y = "Patients per 100,000", color = "City") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme_bw()
first_spike = city_trend_major %>% filter(quarter == "2022Q4") %>% select(city, total_patients, population, patients_per_100k)
second_spike = city_trend_major %>% filter(quarter == "2024Q1") %>% select(city, total_patients, population, patients_per_100k)
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
ggplot(city_trend_major %>% filter(quarter == "2022Q4" | quarter == "2024Q1")) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k, fill = quarter), position = position_dodge2(preserve = "single"), col="black") +
labs(title = "Flu Patients per 100,000 during Spikes", x = "City", y = "Flu Patients per 100,000", fill = "Quarter") + theme_bw()
city_health = read.csv("../texas_cityhealth.csv") %>% pivot_wider(names_from = Metric, values_from = Value) # 2022
colnames(city_health)[1] = "city"
flu_vax = read.csv("../texas_flu_vax.csv") # 2022
first_spike = first_spike %>% left_join(city_health) %>% left_join(flu_vax[,2:3])
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike[c(1,3:8),], aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", x=  "Routine Checkup (%)", y ="Patients per 100,000", col = "City") + theme_bw()
cor(first_spike[c(1,3:8),]$`Routine Checkup (%)`, first_spike[c(1,3:8),]$patients_per_100k
cor(first_spike[c(1,3:8),]$`Routine Checkup (%)`, first_spike[c(1,3:8),]$patients_per_100k)
cor(first_spike[c(1,3:8),]$`Routine Checkup (%)`, first_spike[c(1,3:8),]$patients_per_100k)
ggplot(first_spike[c(1,3:8),], aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000 w/out Austin", x=  "Routine Checkup (%)",
y ="Patients per 100,000", col = "City") + theme_bw()
knitr::opts_chunk$set(fig.height=8, fig.width=8, fig.align = "center", warning=FALSE, echo=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60))
library(dplyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(patchwork)
library(corrplot)
city_trend_major = read.csv("../texas_city_trend_major.csv")
colnames(city_trend_major) = c("city", "year", "quarter", "total_patients", "population", "patients_per_100k")
ggplot(city_trend_major, aes(x = quarter, y = patients_per_100k, group = city, color = city)) +
geom_line(linewidth = 1,) +
geom_point() +
labs(title = "Flu patients per 100,000 over time by city", x = "Quarter", y = "Patients per 100,000", color = "City") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme_bw()
first_spike = city_trend_major %>% filter(quarter == "2022Q4") %>% select(city, total_patients, population, patients_per_100k)
second_spike = city_trend_major %>% filter(quarter == "2024Q1") %>% select(city, total_patients, population, patients_per_100k)
first = ggplot(first_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2022 Q4)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
second = ggplot(second_spike) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k), fill = "skyblue", col="black") +
labs(title = "Flu Patients per 100,000 during First Spike (2024 Q1)", x = "City", y = "Flu Patients per 100,000") + theme_bw()
first / second
ggplot(city_trend_major %>% filter(quarter == "2022Q4" | quarter == "2024Q1")) + geom_col(aes(x = reorder(city, patients_per_100k), y = patients_per_100k, fill = quarter), position = position_dodge2(preserve = "single"), col="black") +
labs(title = "Flu Patients per 100,000 during Spikes", x = "City", y = "Flu Patients per 100,000", fill = "Quarter") + theme_bw()
city_health = read.csv("../texas_cityhealth.csv") %>% pivot_wider(names_from = Metric, values_from = Value) # 2022
colnames(city_health)[1] = "city"
flu_vax = read.csv("../texas_flu_vax.csv") # 2022
first_spike = first_spike %>% left_join(city_health) %>% left_join(flu_vax[,2:3])
numeric_data = first_spike[sapply(first_spike, is.numeric)]
cor_matrix = cor(numeric_data)
corrplot.mixed(cor_matrix, tl.col = "black", tl.pos = "lt", addgrid.col = TRUE, upper="color", lower="number", diag="l")
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", x=  "Routine Checkup (%)", y ="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike[c(1,3:8),], aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000 w/out Austin", x=  "Routine Checkup (%)",
y ="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Uninsured (%) vs. Flu Patients per 100,000", x = "Uninsured (%)", y = "Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000", x=  "Routine Checkup (%)", y ="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike[c(1,3:8),], aes(x=`Routine Checkup (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Routine Checkup (%) vs. Flu Patients per 100,000 w/out Austin", x=  "Routine Checkup (%)",
y ="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike[c(2:5,7:8),], aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike[c(2:5,7:8),], aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=TRUE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike[c(2:5,7:8),], aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=TRUE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
tinytex::check_installed()
?tinytex::check_installed
?tinytex::check_installed("framed")
tinytex::is_tinytex()
tinytex::uninstall_tinytex()
pdftex --version
tinytex::install_tinytex()
tinytex::install_tinytex()
tinytex::is_tinytex()
ggplot(first_spike[c(1,3:8),], aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Uninsured (%) vs. Flu Patients per 100,000", x = "Uninsured (%)", y = "Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=`Uninsured (%)`, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Uninsured (%) vs. Flu Patients per 100,000", x = "Uninsured (%)", y = "Patients per 100,000", col = "City") + theme_bw()
lm(patients_per_100k, coverage_rate, data=first_spike)
lm(patients_per_100k ~ coverage_rate, data=first_spike)
ggplot(first_spike[c(2:5,7:8),], aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
ggplot(first_spike, aes(x=coverage_rate, y=patients_per_100k, col=city)) + geom_point(size=2) +
geom_smooth(method = "lm", col = "black", se=FALSE) +
labs(title = "Vaccination Coverage Rate vs. Flu Patients per 100,000", x="Coverage Rate", y="Patients per 100,000", col = "City") + theme_bw()
?do
library(mosaic)
# Run 10,000 bootstrap resamples and extract the slope
coverage_boot = do(10) * {
model = lm(patients_per_100k ~ coverage_rate, data = mosaic::resample(first_spike))
coef(model)[2]  # this extracts the slope (coefficient on coverage_rate)
}
# Rename the column for clarity
names(coverage_boot) = "coverage_rate"
# View a 95% confidence interval using percentiles
quantile(coverage_boot$coverage_rate, c(0.025, 0.975))
# Run 10,000 bootstrap resamples and extract the slope
coverage_boot = do(10000) * {
model = lm(patients_per_100k ~ coverage_rate, data = mosaic::resample(first_spike))
coef(model)[2]  # this extracts the slope (coefficient on coverage_rate)
}
# Rename the column for clarity
names(coverage_boot) = "coverage_rate"
# View a 95% confidence interval using percentiles
quantile(coverage_boot$coverage_rate, c(0.025, 0.975))
View(coverage_boot)
View(coverage_boot)
coverage_boot = do(10000) * {
model = lm(patients_per_100k ~ coverage_rate, data = mosaic::resample(first_spike))
coef(model)[2]
}
View(coverage_boot)
View(coverage_boot)
hist(coverage_boot)
hist(x=coverage_boot$coverage_rate)
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate))
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), bins=50)
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), bins=20)
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), bins=30)
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), bins=30) + geom_abline(x=mean(coverage_boot$coverage_rate))
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), bins=30) + geom_abline(y=mean(coverage_boot$coverage_rate))
?geom_abline
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), bins=30) + geom_vline(y=mean(coverage_boot$coverage_rate))
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), bins=30) + geom_vline(x=mean(coverage_boot$coverage_rate))
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), bins=30) + geom_vline(xintercept=mean(coverage_boot$coverage_rate))
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), color = "black", fill = "skyblue", bins=30) +
geom_vline(xintercept=mean(coverage_boot$coverage_rate), color = "red") + theme_bw()
mean(coverage_boot$coverage_rate)
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), color = "black", fill = "skyblue", bins=30) +
geom_vline(xintercept=mean(coverage_boot$coverage_rate), color = "red") +
labs(title = "Distribution of coverage_rate coefficient", x = "coverage_rate", y = "Frequency") + theme_bw()
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), color = "black", fill = "skyblue", bins=40) +
geom_vline(xintercept=mean(coverage_boot$coverage_rate), color = "red") +
labs(title = "Distribution of coverage_rate coefficient", x = "coverage_rate", y = "Frequency") + theme_bw()
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), color = "black", fill = "skyblue", bins=30) +
geom_vline(xintercept=mean(coverage_boot$coverage_rate), color = "red") +
labs(title = "Distribution of coverage_rate coefficient", x = "coverage_rate", y = "Frequency") + theme_bw()
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(coverage_boot$coverage_rate), color = "red") +
labs(title = "Distribution of coverage_rate coefficient", x = "coverage_rate", y = "Frequency") + theme_bw()
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(coverage_boot$coverage_rate), color = "red") +
labs(title = "Bootstrapped sampling distribution of coverage_rate coefficient", x = "coverage_rate", y = "Frequency") + theme_bw()
round(mean(coverage_boot$coverage_rate), 2)
checkup_boot = do(10000) * {
model = lm(patients_per_100k ~ `Routine Checkup (%)`, data = mosaic::resample(first_spike[c(1,3:8),]))
coef(model)[2]
}
ggplot(checkup_boot) + geom_histogram(aes(x=`Routine Checkup (%)`), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$`Routine Checkup (%)`), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine checkup coefficient", x = "Routine Checkup (%)", y = "Frequency") + theme_bw()
View(checkup_boot)
View(checkup_boot)
names(checkup_boot)
names(checkup_boot)[1] = "routine_checkup"
names(checkup_boot)[1]
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine checkup coefficient", x = "Routine Checkup (%)", y = "Frequency") + theme_bw()
mean(checkup_boot$routine_checkup)
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup, na.rm = TRUE), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine checkup coefficient", x = "Routine Checkup (%)", y = "Frequency") + theme_bw()
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=40) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup, na.rm = TRUE), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine checkup coefficient", x = "Routine Checkup (%)", y = "Frequency") + theme_bw()
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup, na.rm = TRUE), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine checkup coefficient", x = "Routine Checkup (%)", y = "Frequency") + theme_bw()
is.na(checkup_boot)
table(is.na(checkup_boot))
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup, na.rm = TRUE), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine checkup coefficient", x = "Routine Checkup (%)", y = "Frequency") + theme_bw()
mean(checkup_boot$routine_checkup, na.rm = TRUE)
lm(patients_per_100k ~ `Routine Checkup (%)`, data = mosaic::resample(first_spike[c(1,3:8),]))
lm(patients_per_100k ~ `Routine Checkup (%)`, data = mosaic::resample(first_spike[c(1,3:8),]))
lm(patients_per_100k ~ `Routine Checkup (%)`, data = mosaic::resample(first_spike[c(1,3:8),]))
lm(patients_per_100k ~ `Routine Checkup (%)`, data = (first_spike[c(1,3:8),]))
confint(coverage_boot$coverage_rate)
confint(checkup_boot$routine_checkup)
confint(checkup_boot$routine_checkup, na.rm = TRUE)
checkup_boot = na.rm(checkup_boot)
checkup_boot = na.omit(checkup_boot)
confint(checkup_boot$routine_checkup, na.rm = TRUE)
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine checkup coefficient", x = "Routine Checkup (%)", y = "Frequency") + theme_bw()
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine_checkup coefficient", x = "routine_checkup", y = "Frequency") + theme_bw()
round(mean(checkup_boot$routine_checkup), 2)
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine_checkup coefficient", x = "routine_checkup", y = "Frequency") + theme_bw()
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine_checkup coefficient", x = "routine_checkup", y = "Frequency") + theme_bw()
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(coverage_boot$coverage_rate), color = "red") +
labs(title = "Bootstrapped sampling distribution of coverage_rate coefficient", x = "coverage_rate", y = "Frequency") + theme_bw()
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine_checkup coefficient", x = "routine_checkup", y = "Frequency") + theme_bw()
ggplot(coverage_boot) + geom_histogram(aes(x=coverage_rate), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(coverage_boot$coverage_rate), color = "red") +
labs(title = "Bootstrapped sampling distribution of coverage_rate coefficient", x = "coverage_rate", y = "Frequency") + theme_bw()
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine_checkup coefficient", x = "routine_checkup", y = "Frequency") + theme_bw()
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine_checkup coefficient", x = "routine_checkup", y = "Frequency") + theme_bw()
ggplot(checkup_boot) + geom_histogram(aes(x=routine_checkup), color = "black", fill = "skyblue", bins=50) +
geom_vline(xintercept=mean(checkup_boot$routine_checkup), color = "red") +
labs(title = "Bootstrapped sampling distribution of routine_checkup coefficient", x = "routine_checkup", y = "Frequency") + theme_bw()
