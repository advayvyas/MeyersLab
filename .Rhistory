View(beds_long)
View(flu_long)
View(flu_long)
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter = as.numeric(substr(quarter, 1, 4)) * 4 + as.numeric(substr(quarter, 6, 6)) - 4)
# Combine datasets into long format
flu_long = city_trend_major %>% select(city = PAT_City, quarter, value = total_patients) %>% mutate(metric = "Flu Patients")
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter = as.numeric(substr(quarter, 1, 4)) - 2022 + as.numeric(substr(quarter, 6, 6)) - 4)
# Combine datasets into long format
flu_long = city_trend_major %>% select(city = PAT_City, quarter, value = total_patients) %>% mutate(metric = "Flu Patients")
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter = as.numeric(substr(quarter, 1, 4)) - 2022 + as.numeric(substr(quarter, 6, 6)))
# Combine datasets into long format
flu_long = city_trend_major %>% select(city = PAT_City, quarter, value = total_patients) %>% mutate(metric = "Flu Patients")
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(quarter, 1, 4)) - 2022 + as.numeric(substr(quarter, 6, 6)))
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(quarter, 1, 4)) - 2022 + as.numeric(substr(quarter, 6, 6)) - 2)
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(quarter, 1, 4)) - 2022 + as.numeric(substr(quarter, 6, 6)))
substr(quarter, 1, 4)
as.numeric(substr(quarter, 1, 4))
as.numeric(substr(quarter[1], 1, 4))
as.numeric(substr(flu_long$quarter[1], 1, 4))
# Combine datasets into long format
flu_long = city_trend_major %>% select(city = PAT_City, quarter, value = total_patients) %>% mutate(metric = "Flu Patients")
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(flu_long$quarter, 1, 4)) - 2022 + as.numeric(substr(flu_long$quarter, 6, 6)))
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(flu_long$quarter, 1, 4)) - 2022 )
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(flu_long$quarter, 1, 4)) - 2021 )
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(flu_long$quarter, 1, 4)) - 2021 + + as.numeric(substr(flu_long$quarter, 6, 6)))
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(flu_long$quarter, 1, 4)) - 2021 + as.numeric(substr(flu_long$quarter, 6, 6)))
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = as.numeric(substr(flu_long$quarter, 1, 4)) - 2021 + 4 * as.numeric(substr(flu_long$quarter, 6, 6)))
# quarter conversion to numeric
flu_long = flu_long %>% mutate(quarter_numeric = (as.numeric(substr(quarter, 1, 4)) - 2022) * 4 + as.numeric(substr(quarter, 6, 6)) - 2)
beds_long = beds_long %>% mutate(quarter_numeric = (as.numeric(substr(quarter, 1, 4)) - 2022) * 4 + as.numeric(substr(quarter, 7, 7)) - 2)
beds_long = beds_long %>% mutate(quarter_numeric = (as.numeric(substr(quarter, 1, 4)) - 2022) * 4 + as.numeric(substr(quarter, 7, 7)) - 2) %>% filter(quarter > 0)
beds_long = beds_long %>% mutate(quarter_numeric = (as.numeric(substr(quarter, 1, 4)) - 2022) * 4 + as.numeric(substr(quarter, 7, 7)) - 2) %>% filter(quarter_numeric > 0)
beds_long = beds_by_city_quarter %>% select(city, quarter, value = total_beds) %>% mutate(metric = "Total Beds")
beds_long = beds_long %>% mutate(quarter_numeric = (as.numeric(substr(quarter, 1, 4)) - 2022) * 4 + as.numeric(substr(quarter, 7, 7)) - 2) %>% filter(quarter_numeric > 0)
combined = bind_rows(flu_long, beds_long)
# Plot both metrics faceted
ggplot(combined, aes(x = quarter, y = value, color = city, group = city)) +
geom_line() +
geom_point() +
facet_wrap(~ metric, scales = "free_y", nrow=2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot both metrics faceted
ggplot(combined, aes(x = quarter_numeric, y = value, color = city, group = city)) +
geom_line() +
geom_point() +
facet_wrap(~ metric, scales = "free_y", nrow=2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(combined)
View(combined)
ggplot(city_trend_major, aes(x = quarter, y = total_patients, color = PAT_City, group = PAT_City)) +
geom_line(linewidth = 1.2) +
geom_point() +
theme_minimal(base_size = 14) +
labs(title = "Flu Patient Trends Over Time by City", x = "Quarter", y = "Number of Patients", color = "City") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + facet_wrap(~PAT_City, nrow = 2)
ggplot(city_trend_major, aes(x = quarter, y = total_patients, color = PAT_City, group = PAT_City)) +
geom_line(linewidth = 1.2) +
geom_point() +
theme_minimal(base_size = 14) +
labs(title = "Flu Patient Trends Over Time by City", x = "Quarter", y = "Number of Patients", color = "City") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + facet_wrap(~PAT_City, nrow = 2)
ggplot(city_trend_major, aes(x = quarter, y = total_patients, color = PAT_City, group = PAT_City)) +
geom_line(linewidth = 1.2) +
geom_point() +
theme_minimal(base_size = 14) +
labs(title = "Flu Patient Trends Over Time by City", x = "Quarter", y = "Number of Patients", color = "City") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + facet_wrap(~PAT_City, nrow = 2)
View(flu_all_labeled)
View(flu_all_labeled)
?filter
View(hospitals_major)
View(hospitals_major)
flu22_3 = read.csv(".../DSHS/FLU_ALL_PAT_CAT_2022Q3.csv")
flu22_3 = read.csv("../DSHS/FLU_ALL_PAT_CAT_2022Q3.csv")
View(flu22_3_prop)
View(flu22_3_prop)
View(hospitals_major_by)
View(hospitals_major_by)
table(is.na(hospitals_major_by))
table(is.na(hospitals_major_by$beds_avg))
table(is.na(hospitals_major_by$flu_avg))
table(is.na(hospitals_major_by$flu_sum))
View(hospitals_by_year)
View(hospitals_by_year)
hospitals = read.csv("../COVID-19_Reported_Patient_Impact_and_Hospital_Capacity_by_Facility.csv")
hospitals = hospitals[hospitals$state=="TX",] %>% mutate(city = str_to_title(city))
hospitals_major = hospitals %>% filter(city %in% major_cities) %>% mutate(city = factor(city, levels = major_cities))
library(dplyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
hospitals_major = hospitals %>% filter(city %in% major_cities) %>% mutate(city = factor(city, levels = major_cities))
desired_columns = c("hospital_pk", "collection_week", "hospital_name", "city", "hospital_subtype", "total_beds_7_day_avg", "total_patients_hospitalized_confirmed_influenza_7_day_sum", "total_patients_hospitalized_confirmed_influenza_7_day_avg")
hospitals_major_by = hospitals_major %>%
select(all_of(desired_columns)) %>%
rename(
id = hospital_pk,
week = collection_week,
name = hospital_name,
city = city,
subtype = hospital_subtype,
beds_avg = total_beds_7_day_avg,
flu_sum = total_patients_hospitalized_confirmed_influenza_7_day_sum,
flu_avg = total_patients_hospitalized_confirmed_influenza_7_day_avg)
hospitals_major_by = hospitals_major_by %>% mutate(across(c(beds_avg, flu_sum, flu_avg), ~ifelse(. <= 0, NA, .)))
View(hospitals_major_by)
View(hospitals_major_by)
View(flu_all_labeled)
View(flu_all_labeled)
write_csv(flu_all_labeled, "DSHS/flu_data_complete.csv")
setwd("C:\Users\advay\My Drive\UT Notes\Research\MeyersLab")
setwd("C:/Users/advay/My Drive/UT Notes/Research/MeyersLab")
write_csv(flu_all_labeled, "DSHS/flu_data_complete.csv")
flu_complete = read.csv("../DSHS/flu_data_complete.csv")
hospitals = read.csv("../COVID-19_Reported_Patient_Impact_and_Hospital_Capacity_by_Facility.csv")
hospitals = hospitals[hospitals$state=="TX",] %>% mutate(city = str_to_title(city))
flu_complete = read.csv("../DSHS/flu_data_complete.csv")
hospitals_major = hospitals %>% filter(city %in% major_cities) %>% mutate(city = factor(city, levels = major_cities))
flu_complete = read.csv("../DSHS/flu_data_complete.csv")
city_trend = flu_all_labeled %>%
filter(PAT_STATE == "TX") %>%
group_by(quarter, PAT_City) %>%
summarise(total_patients = n(), .groups = "drop")
flu_complete = read.csv("../DSHS/flu_data_complete.csv")
city_trend = flu_complete %>%
filter(PAT_STATE == "TX") %>%
group_by(quarter, PAT_City) %>%
summarise(total_patients = n(), .groups = "drop")
# Focus on major cities
major_cities = c("Houston", "San Antonio", "Dallas", "Austin", "Fort Worth", "El Paso", "Arlington", "Corpus Christi")
city_trend_major = city_trend %>% filter(PAT_City %in% major_cities) %>% mutate(PAT_City = factor(PAT_City, levels = major_cities))
hospitals_major = hospitals %>% filter(city %in% major_cities) %>% mutate(city = factor(city, levels = major_cities))
desired_columns = c("hospital_pk", "collection_week", "hospital_name", "city", "hospital_subtype", "total_beds_7_day_avg", "total_patients_hospitalized_confirmed_influenza_7_day_sum", "total_patients_hospitalized_confirmed_influenza_7_day_avg")
hospitals_major_by = hospitals_major %>%
select(all_of(desired_columns)) %>%
rename(
id = hospital_pk,
week = collection_week,
name = hospital_name,
city = city,
subtype = hospital_subtype,
beds_avg = total_beds_7_day_avg,
flu_sum = total_patients_hospitalized_confirmed_influenza_7_day_sum,
flu_avg = total_patients_hospitalized_confirmed_influenza_7_day_avg)
hospitals_major_by = hospitals_major_by %>% mutate(across(c(beds_avg, flu_sum, flu_avg), ~ifelse(. <= 0, NA, .)))
hospitals_major = hospitals %>% filter(city %in% major_cities) %>% mutate(city = factor(city, levels = major_cities))
desired_columns = c("hospital_pk", "collection_week", "hospital_name", "city", "hospital_subtype", "total_beds_7_day_avg", "total_patients_hospitalized_confirmed_influenza_7_day_sum", "total_patients_hospitalized_confirmed_influenza_7_day_avg")
hospitals_major = hospitals_major %>%
select(all_of(desired_columns)) %>%
rename(
id = hospital_pk,
week = collection_week,
name = hospital_name,
city = city,
subtype = hospital_subtype,
beds_avg = total_beds_7_day_avg,
flu_sum = total_patients_hospitalized_confirmed_influenza_7_day_sum,
flu_avg = total_patients_hospitalized_confirmed_influenza_7_day_avg)
hospitals_major_by = hospitals_major_by %>% mutate(across(c(beds_avg, flu_sum, flu_avg), ~ifelse(. <= 0, NA, .)))
hospitals_major = hospitals_major %>% mutate(across(c(beds_avg, flu_sum, flu_avg), ~ifelse(. <= 0, NA, .)))
weekly_facility_data = drop_na_(hospitals_major)
?drop_na
weekly_facility_data = drop_na(hospitals_major)
View(weekly_facility_data)
View(weekly_facility_data)
table(is.na(hospitals_major$beds_avg))
table(is.na(hospitals_major$flu_avg))
table(is.na(hospitals_major$flu_sum))
weekly_facility_data = drop_na(hospitals_major)
ggplot(weekly_facility_data) + geom_line(aes(x=beds_avg))
View(weekly_facility_data)
View(weekly_facility_data)
ggplot(weekly_facility_data) + geom_line(aes(x=week, y=beds_avg))
weekly_facility_data$week = as.Date(weekly_facility_data$week)
ggplot(weekly_facility_data) + geom_line(aes(x=week, y=beds_avg))
ggplot(weekly_facility_data) + geom_line(aes(x=week, y=beds_avg)) + facet_wrap(~city)
## Weekly time-series data
```{r, fig.length = 10, fig.width = 10}
weekly_facility_data = drop_na(hospitals_major)
weekly_facility_data$week = as.Date(weekly_facility_data$week)
ggplot(weekly_facility_data) + geom_line(aes(x=week, y=beds_avg)) + facet_wrap(~city)
## Weekly time-series data
```{r, fig.height = 10, fig.width = 10}
weekly_facility_data = drop_na(hospitals_major)
weekly_facility_data$week = as.Date(weekly_facility_data$week)
ggplot(weekly_facility_data) + geom_line(aes(x=week, y=beds_avg)) + facet_wrap(~city)
## Weekly time-series data
```{r, fig.height = 5, fig.width = 10}
weekly_facility_data = drop_na(hospitals_major)
weekly_facility_data$week = as.Date(weekly_facility_data$week)
ggplot(weekly_facility_data) + geom_line(aes(x=week, y=beds_avg)) + facet_wrap(~city)
weekly_facility_data = drop_na(hospitals_major, beds_avg)
weekly_facility_data$week = as.Date(weekly_facility_data$week)
ggplot(weekly_facility_data) + geom_line(aes(x=week, y=beds_avg)) + facet_wrap(~city)
ggplot(weekly_facility_data) + geom_smooth(aes(x=week, y=beds_avg)) + facet_wrap(~city)
ggplot(weekly_facility_data, aes(x=week, y=beds_avg)) + geom_smooth() + facet_wrap(~city)
weekly_facility_data = drop_na(hospitals_major, beds_avg)
weekly_facility_data$week = as.Date(weekly_facility_data$week)
ggplot(weekly_facility_data, aes(x=week, y=beds_avg)) + geom_line() + geom_smooth() + facet_wrap(~city)
ggplot(weekly_facility_data, aes(x=week, y=beds_avg)) + geom_line() + geom_smooth() + facet_wrap(~name)
ggplot(weekly_facility_data, aes(x=week, y=beds_avg)) + geom_line() + geom_smooth() + facet_wrap(~city)
## Weekly time-series data
```{r, fig.height = 8, fig.width = 15, message = "false"}
weekly_facility_data = drop_na(hospitals_major, beds_avg)
weekly_facility_data$week = as.Date(weekly_facility_data$week)
weekly_facility_data$week = as.Date(weekly_facility_data$week)
ggplot(weekly_facility_data, aes(x=week, y=beds_avg)) + geom_line() + geom_smooth() + facet_wrap(~city)
weekly_facility_data = drop_na(hospitals_major, beds_avg)
weekly_facility_data$week = as.Date(weekly_facility_data$week)
ggplot(weekly_facility_data, aes(x=week, y=beds_avg)) + geom_line() + geom_smooth() + facet_wrap(~city)
weekly_city_data = hospitals_major %>% drop_na(beds_avg) %>% mutate(week = as.Date(week)) %>% group_by(city, week) %>% summarize(total_beds = sum(beds_avg), .groups = "drop")
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth() + facet_wrap(~ city)
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line(color = "red") + geom_smooth() + facet_wrap(~ city)
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red") + facet_wrap(~ city)
?geom_smooth
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se=FALSe) + facet_wrap(~ city)
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city)
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=2)
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=4)
## Weekly time-series data
```{r, fig.height = 8, fig.width = 10, message = "false"}
weekly_city_data = hospitals_major %>% drop_na(beds_avg) %>% mutate(week = as.Date(week)) %>% group_by(city, week) %>% summarize(total_beds = sum(beds_avg), .groups = "drop")
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=4)
city_pop = read.csv("../texas_city_pop.csv")
View(city_trend)
View(city_trend)
View(city_pop)
View(city_pop)
View(city_trend)
View(city_trend)
View(city_trend_major)
View(city_trend_major)
flu_complete = read.csv("../DSHS/flu_data_complete.csv")
city_trend = flu_complete %>%
filter(PAT_STATE == "TX") %>%
group_by(quarter, PAT_City) %>%
summarise(total_patients = n(), .groups = "drop")
# Focus on major cities
major_cities = c("Houston", "San Antonio", "Dallas", "Austin", "Fort Worth", "El Paso", "Arlington", "Corpus Christi")
city_trend_major = city_trend %>% filter(PAT_City %in% major_cities) %>% mutate(PAT_City = factor(PAT_City, levels = major_cities))
flu_complete = read.csv("../DSHS/flu_data_complete.csv")
city_trend = flu_complete %>%
filter(PAT_STATE == "TX") %>%
group_by(quarter, PAT_City) %>%
summarise(total_patients = n(), .groups = "drop")
# Focus on major cities
major_cities = c("Houston", "San Antonio", "Dallas", "Austin", "Fort Worth", "El Paso", "Arlington", "Corpus Christi")
city_trend_major = city_trend %>% filter(PAT_City %in% major_cities) %>% mutate(PAT_City = factor(PAT_City, levels = major_cities))
city_pop %>% arrange(desc(X.1))
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[,c(1, 2:5)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[,c(1, 2:5)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[,c(1, 2:5)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[,c(1, 3:5)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[,c(1, 3:5)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[,c(1, 3:)]
city_pop = city_pop[,c(1, 3:6)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[,c(1, 3:6)]
?size
?length
city_pop = city_pop[c(3:length(city_pop$table.with.row.headers.in.column.A.and.column.headers.in.rows.3.through.4..leading.dots.indicate.sub.parts.)),c(1, 3:6)]
city_pop = city_pop[c(3:1233,c(1, 3:6)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
city_pop = city_pop[-1, ]
?names
names(city_pop)
names(city_pop)[1] == "City"
names(city_pop)[1] = "City"
names(city_pop)
city_pop = city_pop[-1, ] %>% arrange(desc(2020))
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ] %>% arrange(desc(2020))
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ] %>% arrange(desc(2020))
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
View(city_pop)
View(city_pop)
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1277), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ] %>% arrange(desc(2020))
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ] %>% arrange(desc(2020))
city_pop = city_pop[-1, ]
city_pop$2020[1226]
city_pop$2020[16]
city_pop$`2020` = as.numeric(city_pop$`2020`)
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop$`2020` = as.numeric(city_pop$`2020`)
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
summary(city_pop)
city_pop = city_pop %>% mutate(across(2:5, as.numeric))
dplyr::last_dplyr_warnings()
city_pop$City[2]
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop = city_pop[c(52, 270, 44),]
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop = city_pop[c(52, 270, 44, 237, 343, 975, 497, 376),]
city_pop = city_pop[c(52, 270, 44, 237, 343, 975, 497, 376),]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop = city_pop[c(52, 270, 44, 237, 343, 975, 497, 376),]
city_pop = city_pop[c(52, 270, 44, 237, 343, 972, 497, 376),]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop = city_pop[c(52, 270, 44, 237, 343, 972, 497, 376),]
city_pop = city_pop[c(52, 270, 44, 237, 340, 972, 497, 376),]
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop = city_pop[c(52, 270, 44, 237, 340, 972, 497, 376),]
city_pop
city_pop$City = major_cities
city_pop
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop = city_pop[c(52, 270, 44, 237, 340, 972, 497, 376),]
city_pop
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop = city_pop[c(52, 270, 44, 237, 340, 972, 497, 376),]
city_pop$City = c("Austin", "Dallas", "Arlington", "Corpus Christi", "El Paso", "San Antonio", "Houston", "Fort Worth")
city_pop
city_pop %>% mutate(2:5, as.numeric())
city_pop %>% mutate(across(2:5, as.numeric()))
city_pop %>% mutate(across(2:5, as.numeric)
city_pop
city_pop
# gotta clean up this data
city_pop = read.csv("../texas_city_pop.csv")
city_pop = city_pop[c(3:1233), c(1, 3:6)]
names(city_pop) = as.character(city_pop[1, ])
names(city_pop)[1] = "City"
city_pop = city_pop[-1, ]
city_pop = city_pop[c(52, 270, 44, 237, 340, 972, 497, 376),]
city_pop$City = c("Austin", "Dallas", "Arlington", "Corpus Christi", "El Paso", "San Antonio", "Houston", "Fort Worth")
city_pop %>% mutate(across(2:5, as.numeric))
city_pop
city_pop = city_pop %>%  mutate(across(2:5, ~ as.numeric(gsub("[^0-9.-]", "", .))))
city_pop
city_pop = city_pop %>%  mutate(across(2:5, ~ as.numeric(gsub("[^0-9.-]", "", .)))) %>% arrange(desc(2020))
city_pop
city_pop = city_pop %>%  mutate(across(2:5, ~ as.numeric(gsub("[^0-9.-]", "", .)))) %>% arrange(desc(1))
city_pop
city_pop_long = city_pop %>% pivot_longer(-City, names_to = "year", values_to = "population") %>% mutate(year = as.integer(year))
View(city_pop_long)
View(city_pop_long)
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_capita = total_beds / population)
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_capita = total_beds / population)
View(weekly_city_data_norm)
View(weekly_city_data_norm)
ggplot(weekly_city_data, aes(x = week, y = beds_per_capita)) + geom_line() + geom_smooth() + facet_wrap(~ city)
ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_capita)) + geom_line() + geom_smooth() + facet_wrap(~ city)
city_pop_long = city_pop %>% pivot_longer(-City, names_to = "year", values_to = "population") %>% mutate(year = as.integer(year))
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_capita = total_beds / population)
ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_capita)) + geom_line() + geom_smooth() + facet_wrap(~ city)
```{r, fig.height = 8, fig.width = 10, message = "false", warning = "false"}
city_pop_long = city_pop %>% pivot_longer(-City, names_to = "year", values_to = "population") %>% mutate(year = as.integer(year))
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_capita = total_beds / population)
ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_capita)) + geom_line() + geom_smooth() + facet_wrap(~ city)
ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_capita)) + geom_line() + geom_smooth() + facet_wrap(~ city, nrow=4)
major_cities
city_pop_long = city_pop %>% pivot_longer(-City, names_to = "year", values_to = "population") %>% mutate(year = as.integer(year))
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_capita = total_beds / population) %>% mutate(city = factor(city, levels = major_cities))
ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_capita)) + geom_line() + geom_smooth() + facet_wrap(~ city, nrow=4)
city_pop_long = city_pop %>% pivot_longer(-City, names_to = "year", values_to = "population") %>% mutate(year = as.integer(year))
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_10k = total_beds / population * 100000) %>% mutate(city = factor(city, levels = major_cities))
ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_100k)) + geom_line() + geom_smooth() + facet_wrap(~ city, nrow=4)
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_100k = total_beds / population * 100000) %>% mutate(city = factor(city, levels = major_cities))
ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_100k)) + geom_line() + geom_smooth() + facet_wrap(~ city, nrow=4)
## Weekly time-series data
```{r, fig.height = 5, fig.width = 10, message = "false"}
weekly_city_data = hospitals_major %>% drop_na(beds_avg) %>% mutate(week = as.Date(week)) %>% group_by(city, week) %>% summarize(total_beds = sum(beds_avg), .groups = "drop")
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=4)
weekly_city_data = hospitals_major %>% drop_na(beds_avg) %>% mutate(week = as.Date(week)) %>% group_by(city, week) %>% summarize(total_beds = sum(beds_avg), .groups = "drop")
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=4)
weekly_city_data = hospitals_major %>% drop_na(beds_avg) %>% mutate(week = as.Date(week)) %>% group_by(city, week) %>% summarize(total_beds = sum(beds_avg), .groups = "drop")
ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=4)
View(weekly_city_data_norm)
View(weekly_city_data_norm)
View(weekly_city_data)
View(weekly_city_data)
library(patchwork)
install.packages(patchwork)
install.packages("patchwork")
weekly_city_data = hospitals_major %>% drop_na(beds_avg) %>% mutate(week = as.Date(week)) %>% group_by(city, week) %>% summarize(total_beds = sum(beds_avg), .groups = "drop")
regular = ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=4)
city_pop_long = city_pop %>% pivot_longer(-City, names_to = "year", values_to = "population") %>% mutate(year = as.integer(year))
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_100k = total_beds / population * 100000) %>% mutate(city = factor(city, levels = major_cities))
normalized = ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_100k)) + geom_line() + geom_smooth() + facet_wrap(~ city, nrow=4)
regular + normalized
library(patchwork)
regular + normalized
```{r, fig.width = 15, fig.height = 10}
regular + normalized
regular + normalized
city_pop_long = city_pop %>% pivot_longer(-City, names_to = "year", values_to = "population") %>% mutate(year = as.integer(year))
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_100k = total_beds / population * 100000) %>% mutate(city = factor(city, levels = major_cities))
normalized = ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_100k)) + geom_line() + geom_smooth() + facet_wrap(~ city, nrow=8)
weekly_city_data = hospitals_major %>% drop_na(beds_avg) %>% mutate(week = as.Date(week)) %>% group_by(city, week) %>% summarize(total_beds = sum(beds_avg), .groups = "drop")
regular = ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=8)
regular + normalized
regular + normalized
city_pop_long = city_pop %>% pivot_longer(-City, names_to = "year", values_to = "population") %>% mutate(year = as.integer(year))
weekly_city_data_norm = weekly_city_data %>%  mutate(year = as.integer(format(week, "%Y"))) %>% left_join(city_pop_long, by = c("city" = "City", "year" = "year")) %>%
mutate(beds_per_100k = total_beds / population * 100000) %>% mutate(city = factor(city, levels = major_cities))
normalized = ggplot(weekly_city_data_norm, aes(x = week, y = beds_per_100k)) + geom_line() + geom_smooth() + facet_wrap(~ city, nrow=8) +
labs(title = "Hospital Beds per 100,000 by City over Time", x = "Year", y= "Beds per 100,000")
regular + normalized
weekly_city_data = hospitals_major %>% drop_na(beds_avg) %>% mutate(week = as.Date(week)) %>% group_by(city, week) %>% summarize(total_beds = sum(beds_avg), .groups = "drop")
regular = ggplot(weekly_city_data, aes(x = week, y = total_beds)) + geom_line() + geom_smooth(color = "red", se = FALSE) + facet_wrap(~ city, nrow=8) +
labs(title = "Hospital Beds by City over Time", x = "Year", y= "Beds")
regular + normalized
regular + normalized
regular + normalized
regular + normalized
regular + normalized
