geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_season", y = "Observed diff_wis_season",
title = "Observed vs Predicted with 95% Prediction Intervals (season)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*rcoverage_95_bart_szn, nrow(rbart_predictions_szn))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
ggplot(rbart_predictions_szn, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_season", y = "Observed diff_wis_season",
title = "Observed vs Predicted with 95% Prediction Intervals (season)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*rcoverage_95_bart_szn, nrow(rbart_predictions_szn))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
bart_predictions$estimate = apply(pred_old, 2, mean)
bart_predictions$observed = df_var$diff_wis_season
bart_fit = bart(
x.train = df_var[, c("pop_ratio","pct_urban",
"density_state","density_hsa")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
bart_vi = as.data.frame(bart_fit$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
pred_old = predict(bart_fit, newdata = df_var)
bart_predictions = as.data.frame(t(apply(pred_old, 2, quantile, probs = c(0.025, 0.975))))
colnames(bart_predictions) = c("ci_low", "ci_high")
bart_predictions$estimate = apply(pred_old, 2, mean)
bart_predictions$observed = df_var$diff_wis_season
coverage_95_bart = mean(
bart_predictions$observed >= bart_predictions$ci_low &
bart_predictions$observed <= bart_predictions$ci_high,
na.rm = TRUE
)
bart_fit_szn = bart(
x.train = df_var[, c("pop_ratio","pct_urban","population_state","density_state",
"density_hsa","n_hsa","area_km2_hsa","area_km2_state")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
bart_vi_szn = as.data.frame(bart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
pred_szn = predict(bart_fit_szn, newdata = df_var)
bart_predictions_szn = as.data.frame(t(apply(pred_szn, 2, quantile, probs = c(0.025, 0.975))))
colnames(bart_predictions_szn) = c("ci_low", "ci_high")
bart_predictions_szn$estimate = apply(pred_szn, 2, mean)
bart_predictions_szn$observed = df_var$diff_wis_season
coverage_95_bart_szn = mean(
bart_predictions_szn$observed >= bart_predictions_szn$ci_low &
bart_predictions_szn$observed <= bart_predictions_szn$ci_high,
na.rm = TRUE
)
bart_predictions_overall$estimate = apply(pred_overall, 2, mean)
bart_predictions_overall$observed = df_var$diff_wis_season
bart_fit_overall = bart(
x.train = df_var[, c("pop_ratio","pct_urban","population_state","density_state",
"density_hsa","n_hsa","area_km2_hsa","area_km2_state")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
bart_vi_overall = as.data.frame(bart_fit_overall$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
pred_overall = predict(bart_fit_overall, newdata = df_var)
bart_predictions_overall = as.data.frame(t(apply(pred_overall, 2, quantile, probs = c(0.025, 0.975))))
colnames(bart_predictions_overall) = c("ci_low", "ci_high")
bart_predictions_overall$estimate = apply(pred_overall, 2, mean)
bart_predictions_overall$observed = df_var$diff_wis_season
coverage_95_bart_overall = mean(
bart_predictions_overall$observed >= bart_predictions_overall$ci_low &
bart_predictions_overall$observed <= bart_predictions_overall$ci_high,
na.rm = TRUE
)
var_overall = ggplot(bart_vi_overall) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, overall)") + coord_cartesian(xlim = c(0, 70))
var_szn = ggplot(bart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
var_old = ggplot(bart_vi) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, old)") + coord_cartesian(xlim = c(0, 70))
var_old / var_szn / var_overall
fig_szn = ggplot(bart_predictions_szn, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_season", y = "Observed diff_wis_season",
title = "Observed vs Predicted with 95% Prediction Intervals (season)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*coverage_95_bart_szn, nrow(bart_predictions_szn))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
fig_overall = ggplot(bart_predictions_overall, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_overall", y = "Observed diff_wis_overall",
title = "Observed vs Predicted with 95% Prediction Intervals (overall)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*coverage_95_bart_overall, nrow(bart_predictions_overall))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
fig_old = ggplot(bart_predictions, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_overall", y = "Observed diff_wis_overall",
title = "Observed vs Predicted with 95% Prediction Intervals (old)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*coverage_95_bart, nrow(bart_predictions))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
fig_old / fig_szn / fig_overall
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
dim(rpred_szn)
rpred_szn = predict(rbart_fit_szn, newdata = df_var, group.by = df_var$state,, type = "ev")   # expected value = f(x) + ranef
rbart_predictions_szn = as.data.frame(t(apply(rpred_szn, 2, quantile, probs = c(0.025, 0.975))))
colnames(rbart_predictions_szn) = c("ci_low", "ci_high")
rbart_predictions_szn$estimate = apply(rpred_szn, 2, mean)
rbart_predictions_szn$observed = df_var$diff_wis_season
rcoverage_95_bart_szn = mean(
rbart_predictions_szn$observed >= rbart_predictions_szn$ci_low &
rbart_predictions_szn$observed <= rbart_predictions_szn$ci_high,
na.rm = TRUE
)
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
ggplot(rbart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
ggplot(rbart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
ggplot(rbart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
ggplot(rbart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='red') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
ggplot(rbart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
rpred_szn = predict(rbart_fit_szn, newdata = df_var, group.by = df_var$state,, type = "ev")   # expected value = f(x) + ranef
View(rpred_szn)
rpred_szn = predict(rbart_fit_szn, newdata = df_var, type = "ev")   # expected value = f(x) + ranef
, group.by = df_var$state,
rpred_szn = predict(rbart_fit_szn, newdata = df_var, group.by = df_var$state, type = "ev")   # expected value = f(x) + ranef
rbart_predictions_szn = as.data.frame(t(apply(rpred_szn, 2, quantile, probs = c(0.025, 0.975))))
colnames(rbart_predictions_szn) = c("ci_low", "ci_high")
rbart_predictions_szn$estimate = apply(rpred_szn, 2, mean)
rbart_predictions_szn$observed = df_var$diff_wis_season
rbart_predictions_szn$observed = df_var$diff_wis_season
rcoverage_95_bart_szn = mean(
rbart_predictions_szn$observed >= rbart_predictions_szn$ci_low &
rbart_predictions_szn$observed <= rbart_predictions_szn$ci_high,
na.rm = TRUE
)
```{r rbart_features, fig.width = 10, fig.height= 5}
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
ggplot(rbart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
ggplot(rbart_predictions_szn, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_season", y = "Observed diff_wis_season",
title = "Observed vs Predicted with 95% Prediction Intervals (season)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*rcoverage_95_bart_szn, nrow(rbart_predictions_szn))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
mixed_features = ggplot(rbart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
mixed_graph = ggplot(rbart_predictions_szn, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_season", y = "Observed diff_wis_season",
title = "Observed vs Predicted with 95% Prediction Intervals (season)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*rcoverage_95_bart_szn, nrow(rbart_predictions_szn))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
mixed_features / mixed_graph
```{r rbart_output, fig.width = 10, fig.height= 10}
mixed_features / mixed_graph
mixed_features / mixed_graph
rbart_predictions_szn$estimate = colMeans(rpred_szn)
rbart_predictions_szn$observed = df_var$diff_wis_season
rcoverage_95_bart_szn = mean(
rbart_predictions_szn$observed >= rbart_predictions_szn$ci_low &
rbart_predictions_szn$observed <= rbart_predictions_szn$ci_high,
na.rm = TRUE
)
mixed_features / mixed_graph
dim(rpred_szn)
mean(rbart_predictions_szn$ci_high - rbart_predictions_szn$ci_low)
plot(rbart_predictions_szn$estimate, rbart_predictions_szn$observed)
abline(0,1,col="red")
rbart_fit_szn = rbart_vi(
formula = diff_wis_season ~ pop_ratio + pct_urban + population_state +
density_state + density_hsa + n_hsa +
area_km2_hsa + area_km2_state,
data = df_var,
group.by = df_var$state,   # random intercept per state
verbose = FALSE,
keepTrees = TRUE
)
rpred_szn = predict(rbart_fit_szn, newdata = df_var, group.by = df_var$state, type = "ppd")   # expected value = f(x) + ranef
rbart_predictions_szn = as.data.frame(t(apply(rpred_szn, 2, quantile, probs = c(0.025, 0.975))))
colnames(rbart_predictions_szn) = c("ci_low", "ci_high")
rbart_predictions_szn$estimate = apply(rpred_szn, 2, mean)
rbart_predictions_szn$observed = df_var$diff_wis_season
rcoverage_95_bart_szn = mean(
rbart_predictions_szn$observed >= rbart_predictions_szn$ci_low &
rbart_predictions_szn$observed <= rbart_predictions_szn$ci_high,
na.rm = TRUE
)
rbart_vi_szn = as.data.frame(rbart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
mixed_features = ggplot(rbart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
mixed_graph = ggplot(rbart_predictions_szn, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_season", y = "Observed diff_wis_season",
title = "Observed vs Predicted with 95% Prediction Intervals (season)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*rcoverage_95_bart_szn, nrow(rbart_predictions_szn))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
mixed_features / mixed_graph
summary(rbart_fit_szn)
summar(df_var$diff_wis_season)
summary(df_var$diff_wis_season)
# dims and a glance
dim(rpred_szn)          # should be n_draws × n_obs (you said 1200 x 173)
table(df_var$state)     # make sure grouping variable has sensible counts
# check response range/summary
summary(df_var$diff_wis_season)
sd(df_var$diff_wis_season)
# sigma is stored in the rbart_vi fit
# If combineChains = FALSE you may have an array; collapse to vector if needed
sigma_samples = as.numeric(unlist(rbart_fit_szn$sigma))
tau_samples   = as.numeric(unlist(rbart_fit_szn$tau))
summary(sigma_samples)
quantile(sigma_samples, probs = c(0.01, 0.1, 0.5, 0.9, 0.99))
mean(sigma_samples); sd(sigma_samples)
summary(tau_samples)
quantile(tau_samples, probs = c(0.01, 0.1, 0.5, 0.9, 0.99))
# posterior mean per obs
post_mean = colMeans(rpred_szn)   # for "ppd" use rpred_szn_ppd
# if you have a ppd matrix, compute its SD per observation
# rpred_szn_ppd = predict(..., type="ppd")
post_sd_per_obs = apply(rpred_szn, 2, sd)
# residuals
resid_obs = df_var$diff_wis_season - post_mean
summary(post_sd_per_obs)
summary(abs(resid_obs))
# plot density comparison
hist(post_sd_per_obs, main="posterior sd per obs", xlab="sd")
hist(abs(resid_obs), main="|residual|", xlab="|y - posterior mean|")
rbart_fit_szn = rbart_vi(
formula = diff_wis_season ~ pop_ratio + pct_urban + population_state +
density_state + density_hsa + n_hsa +
area_km2_hsa + area_km2_state,
data = df_var,
group.by = df_var$state,   # random intercept per state
sigquant = 0.99,   # moves prior toward larger sigma
sigdf = 1.0,       # heavier tails
n.trees = 75L,
verbose = FALSE,
keepTrees = TRUE
)
rbart_fit_szn = rbart_vi(
formula = diff_wis_season ~ pop_ratio + pct_urban + population_state +
density_state + density_hsa + n_hsa +
area_km2_hsa + area_km2_state,
data = df_var,
group.by = df_var$state,   # random intercept per state
sigquant = 0.99,   # moves prior toward larger sigma
sigdf = 1.0,       # heavier tails
n.trees = 75L,
verbose = FALSE,
keepTrees = TRUE
)
rpred_szn = predict(rbart_fit_szn, newdata = df_var, group.by = df_var$state, type = "ppd")   # expected value = f(x) + ranef
rbart_predictions_szn = as.data.frame(t(apply(rpred_szn, 2, quantile, probs = c(0.025, 0.975))))
colnames(rbart_predictions_szn) = c("ci_low", "ci_high")
rbart_predictions_szn$estimate = apply(rpred_szn, 2, mean)
rbart_predictions_szn$observed = df_var$diff_wis_season
rcoverage_95_bart_szn = mean(
rbart_predictions_szn$observed >= rbart_predictions_szn$ci_low &
rbart_predictions_szn$observed <= rbart_predictions_szn$ci_high,
na.rm = TRUE
)
rbart_fit_szn = rbart_vi(
formula = diff_wis_season ~ pop_ratio + pct_urban + population_state +
density_state + density_hsa + n_hsa +
area_km2_hsa + area_km2_state,
data = df_var,
group.by = df_var$state,   # random intercept per state
n.trees = 150L,
k = 3.0,
n.samples = 2000L, n.burn = 1000L,
verbose = FALSE,
keepTrees = TRUE
)
rbart_fit_szn = rbart_vi(
formula = diff_wis_season ~ pop_ratio + pct_urban + population_state +
density_state + density_hsa + n_hsa +
area_km2_hsa + area_km2_state,
data = df_var,
group.by = df_var$state,   # random intercept per state
n.trees = 150L,
k = 3.0,
n.samples = 2000L, n.burn = 1000L,
verbose = FALSE,
keepTrees = TRUE
)
rpred_szn = predict(rbart_fit_szn, newdata = df_var, group.by = df_var$state, type = "ppd")   # expected value = f(x) + ranef
rbart_predictions_szn = as.data.frame(t(apply(rpred_szn, 2, quantile, probs = c(0.025, 0.975))))
colnames(rbart_predictions_szn) = c("ci_low", "ci_high")
rbart_predictions_szn$estimate = apply(rpred_szn, 2, mean)
rbart_predictions_szn$observed = df_var$diff_wis_season
rcoverage_95_bart_szn = mean(
rbart_predictions_szn$observed >= rbart_predictions_szn$ci_low &
rbart_predictions_szn$observed <= rbart_predictions_szn$ci_high,
na.rm = TRUE
)
rbart_fit_szn = rbart_vi(
formula = diff_wis_season ~ pop_ratio + pct_urban + population_state +
density_state + density_hsa + n_hsa +
area_km2_hsa + area_km2_state,
data = df_var,
group.by = df_var$hsa_nci_id,   # random intercept per state
n.trees = 150L,
k = 3.0,
n.samples = 2000L, n.burn = 1000L,
verbose = FALSE,
keepTrees = TRUE
)
rpred_szn = predict(rbart_fit_szn, newdata = df_var, group.by = df_var$hsa_nci_id, type = "ppd")   # expected value = f(x) + ranef
rbart_predictions_szn = as.data.frame(t(apply(rpred_szn, 2, quantile, probs = c(0.025, 0.975))))
colnames(rbart_predictions_szn) = c("ci_low", "ci_high")
rbart_predictions_szn$estimate = apply(rpred_szn, 2, mean)
rbart_predictions_szn$observed = df_var$diff_wis_season
rcoverage_95_bart_szn = mean(
rbart_predictions_szn$observed >= rbart_predictions_szn$ci_low &
rbart_predictions_szn$observed <= rbart_predictions_szn$ci_high,
na.rm = TRUE
)
# sample some observations to inspect
set.seed(2)
samp = sample(ncol(rpred_ppd), 9)
lm(state ~ diff_wis_overall, data=df_var)
lm(diff_wis_overall ~ state, data=df_var)
summary(lm(diff_wis_overall ~ state, data = df_var))
knitr::kable(summary(lm(diff_wis_overall ~ state, data = df_var)))
summary(lm(diff_wis_overall ~ state, data = df_var))
summary(lm(diff_wis_overall ~ state + pop_ratio, data = df_var))
summary(lm(diff_wis_overall ~ state + pop_ratio _ pct_urban, data = df_var))
summary(lm(diff_wis_overall ~ state + pop_ratio + pct_urban, data = df_var))
summary(lm(diff_wis_overall ~ state +  pop_ratio + pct_urban + population_state +
density_state + density_hsa + n_hsa +
area_km2_hsa + area_km2_state, data = df_var))
mixed_features / mixed_graph
bart_fit_szn = bart(
x.train = df_var[, c("pop_ratio","pct_urban","population_state","density_state",
"density_hsa","n_hsa","area_km2_hsa","area_km2_state")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
bart_fit_overall = bart(
x.train = df_var[, c("pop_ratio","pct_urban","population_state","density_state",
"density_hsa","n_hsa","area_km2_hsa","area_km2_state")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
knitr::opts_chunk$set(fig.height=4, fig.width=4, fig.align = "left", warning=FALSE, echo=TRUE, tidy=TRUE, tidy.opts=list(width.cutoff=60))
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(tigris)
library(stringr)
library(sf)
library(lubridate)
library(patchwork)
library(corrplot)
library(mosaic)
library(moderndive)
library(effectsize)
library(tidyr)
library(caret)
library(purrr)
library(fastDummies)
library(GGally)
library(formatR)
library(dbarts)
library(iml)
overall2 = read.csv("../forecasting_metrics_overall.csv")
pop_desc = read.csv("../us_hsa_county_popdesc.csv")
us_hsa_county_popdesc_bygroup <- pop_desc %>%
select(state, hsa_nci_id, area_km2_hsa, area_km2_state, n_hsa) %>%
distinct()
overall <- overall2 %>%
left_join(us_hsa_county_popdesc_bygroup, by = c("state", "hsa_nci_id"))
df_var <- overall %>%
filter(season == "2023/24", horizon == 3) %>%
distinct()
bart_fit = bart(
x.train = df_var[, c("pop_ratio","pct_urban",
"density_state","density_hsa")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
bart_vi = as.data.frame(bart_fit$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
pred_old = predict(bart_fit, newdata = df_var)
bart_predictions = as.data.frame(t(apply(pred_old, 2, quantile, probs = c(0.025, 0.975))))
colnames(bart_predictions) = c("ci_low", "ci_high")
bart_predictions$estimate = apply(pred_old, 2, mean)
bart_predictions$observed = df_var$diff_wis_season
coverage_95_bart = mean(
bart_predictions$observed >= bart_predictions$ci_low &
bart_predictions$observed <= bart_predictions$ci_high,
na.rm = TRUE
)
bart_fit_szn = bart(
x.train = df_var[, c("pop_ratio","pct_urban","population_state","density_state",
"density_hsa","n_hsa","area_km2_hsa","area_km2_state")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
bart_vi_szn = as.data.frame(bart_fit_szn$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
pred_szn = predict(bart_fit_szn, newdata = df_var)
bart_predictions_szn = as.data.frame(t(apply(pred_szn, 2, quantile, probs = c(0.025, 0.975))))
colnames(bart_predictions_szn) = c("ci_low", "ci_high")
bart_predictions_szn$estimate = apply(pred_szn, 2, mean)
bart_predictions_szn$observed = df_var$diff_wis_season
coverage_95_bart_szn = mean(
bart_predictions_szn$observed >= bart_predictions_szn$ci_low &
bart_predictions_szn$observed <= bart_predictions_szn$ci_high,
na.rm = TRUE
)
bart_fit_overall = bart(
x.train = df_var[, c("pop_ratio","pct_urban","population_state","density_state",
"density_hsa","n_hsa","area_km2_hsa","area_km2_state")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
bart_vi_overall = as.data.frame(bart_fit_overall$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
pred_overall = predict(bart_fit_overall, newdata = df_var)
bart_predictions_overall = as.data.frame(t(apply(pred_overall, 2, quantile, probs = c(0.025, 0.975))))
colnames(bart_predictions_overall) = c("ci_low", "ci_high")
bart_predictions_overall$estimate = apply(pred_overall, 2, mean)
bart_predictions_overall$observed = df_var$diff_wis_season
coverage_95_bart_overall = mean(
bart_predictions_overall$observed >= bart_predictions_overall$ci_low &
bart_predictions_overall$observed <= bart_predictions_overall$ci_high,
na.rm = TRUE
)
var_overall = ggplot(bart_vi_overall) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, overall)") + coord_cartesian(xlim = c(0, 70))
var_szn = ggplot(bart_vi_szn) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, season)") + coord_cartesian(xlim = c(0, 70))
var_old = ggplot(bart_vi) + geom_col(aes(y = reorder(variable, avg), x = avg), fill='skyblue', col='black') + labs(y = "Feature", x = "Importance", title = "Feature importance (in-built, old)") + coord_cartesian(xlim = c(0, 70))
var_old / var_szn / var_overall
fig_szn = ggplot(bart_predictions_szn, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_season", y = "Observed diff_wis_season",
title = "Observed vs Predicted with 95% Prediction Intervals (season)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*coverage_95_bart_szn, nrow(bart_predictions_szn))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
fig_overall = ggplot(bart_predictions_overall, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_overall", y = "Observed diff_wis_overall",
title = "Observed vs Predicted with 95% Prediction Intervals (overall)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*coverage_95_bart_overall, nrow(bart_predictions_overall))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
fig_old = ggplot(bart_predictions, aes(x = estimate, y = observed)) +
geom_errorbar(aes(ymin = ci_low, ymax = ci_high), width = 0, alpha = 0.35) +
geom_point(alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
labs(x = "Predicted diff_wis_overall", y = "Observed diff_wis_overall",
title = "Observed vs Predicted with 95% Prediction Intervals (old)",
subtitle = sprintf("95%% coverage = %.1f%% (n=%d)", 100*coverage_95_bart, nrow(bart_predictions))) +
theme_minimal() + scale_x_continuous(breaks=seq(-1,2,by=0.25)) + coord_cartesian(xlim = c(-0.25, 1))
fig_old / fig_szn / fig_overall
