count(unique(df_var$hsa_nci_id))
length(unique(df_var$hsa_nci_id))
length(unique(df_250$hsa_nci_id))
#all_inc <- read.csv("Local-level-forecasting/data/hsa_state_inc.csv")
all_inc <- readr::read_csv("hsa_state_inc.csv", show_col_types = FALSE)
#all_inc <- read.csv("Local-level-forecasting/data/hsa_state_inc.csv")
all_inc <- readr::read_csv("..\hsa_state_inc.csv", show_col_types = FALSE)
#all_inc <- read.csv("Local-level-forecasting/data/hsa_state_inc.csv")
all_inc <- readr::read_csv("../hsa_state_inc.csv", show_col_types = FALSE)
avail_hsa <- all_inc %>%
select(state, hsa_nci_id, week_end) %>%
group_by(state, hsa_nci_id) %>%
summarise(max_week_end = max(week_end),
min_week_end = min(week_end),
n = n()) %>%
filter(max_week_end == '2025-07-26')
lower48 <- c(state.name, "District of Columbia")  # 48 states  + DC
lower48 <- setdiff(lower48, c("Alaska", "Hawaii")) # not include Alaska and Hawaii
df_conus <- df_pred %>%
filter(state %in% lower48) %>%
mutate(available = ifelse(is.na(diff_wis_season), 1, 0))
us_map1 <- us_map %>%
filter(state %in% lower48) %>%
left_join(avail_hsa %>%
filter(n == 148), by = c("state", "hsa_nci_id")) %>%
mutate(available = ifelse(is.na(n), 0, 1))
df_conus <- df_pred %>%
filter(state %in% lower48) %>%
mutate(available = ifelse(is.na(diff_wis_season), 1, 0))
View(df_250)
View(df_250)
df_250 <- us_map %>%
filter(population_hsa >= 250000) %>%
select(state, hsa_nci_id, population_hsa, population_state, density_state,
density_hsa, pct_urban, pop_ratio, geometry_hsa, geometry) %>%
distinct() %>%
distinct() %>%
left_join(df_var %>%
ungroup() %>%
filter(season == '2023/24') %>%
select(state, hsa_nci_id, diff_wis_season),
by = c("state", "hsa_nci_id"))
pred <- predict(bart_fit, newdata = df_250) # picked the better one
df_pred <- df_250 %>%
mutate(
diff_wis_season_hat = apply(pred, 2, mean),
lwr95               = apply(pred, 2, quantile, 0.025),
upr95               = apply(pred, 2, quantile, 0.975)
)
#all_inc <- read.csv("Local-level-forecasting/data/hsa_state_inc.csv")
all_inc <- readr::read_csv("../hsa_state_inc.csv", show_col_types = FALSE)
avail_hsa <- all_inc %>%
select(state, hsa_nci_id, week_end) %>%
group_by(state, hsa_nci_id) %>%
summarise(max_week_end = max(week_end),
min_week_end = min(week_end),
n = n()) %>%
filter(max_week_end == '2025-07-26')
lower48 <- c(state.name, "District of Columbia")  # 48 states  + DC
lower48 <- setdiff(lower48, c("Alaska", "Hawaii")) # not include Alaska and Hawaii
df_conus <- df_pred %>%
filter(state %in% lower48) %>%
mutate(available = ifelse(is.na(diff_wis_season), 1, 0))
us_map1 <- us_map %>%
filter(state %in% lower48) %>%
left_join(avail_hsa %>%
filter(n == 148), by = c("state", "hsa_nci_id")) %>%
mutate(available = ifelse(is.na(n), 0, 1))
# ggplot() +
#   geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
#           aes(fill = factor(available)), color = 'gray20') +
#   geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
#           fill = NA, color = "grey20", linewidth = 0.25) +
#   scale_fill_manual(values = c("0" = "white", "1" = "skyblue"),
#                     name = "",
#                     labels = c("Not in Data", "HSA in Data")) +
#   coord_sf() +
#   theme_void() +
#   theme(
#     legend.text  = element_text(size = 20)
#   )
ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(df_conus), "geometry_hsa"),
aes(fill = diff_wis_season), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
fill = NA, color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
scale_fill_viridis_c(option = "magma", direction = 1, na.value = "white",
name = "diff wis season") +
coord_sf() + theme_void() +
labs(title = "diff wis season")
unavail_hsa <- us_map1 %>%
as.data.frame() %>%              # 혹시 tibble이면 sf 변환 위해
sf::st_as_sf() %>%
sf::st_set_geometry("geometry_hsa") %>%
dplyr::filter(available == 0, population_hsa > 250000)
ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(df_conus), "geometry_hsa"),
aes(fill = diff_wis_season_hat), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
fill = NA, color = 'gray20') +
geom_sf(data = unavail_hsa,
fill = NA, color = "red", linewidth = 0.5) +
scale_fill_viridis_c(option = "magma", direction = 1, na.value = "white",
name = "Prediction",
limits = c(min(df_pred$diff_wis_season, na.rm = TRUE),
max(df_pred$diff_wis_season, na.rm = TRUE))) +
coord_sf() + theme_void() +
labs(title = "Prediction")
ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
aes(fill = factor(available)), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
scale_fill_manual(values = c("0" = "white", "1" = "skyblue"),
name = "",
labels = c("Not in Data", "HSA in Data")) +
coord_sf() +
theme_void() +
theme(
legend.text  = element_text(size = 20)
)
#all_inc <- read.csv("Local-level-forecasting/data/hsa_state_inc.csv")
all_inc <- readr::read_csv("../hsa_state_inc.csv", show_col_types = FALSE)
avail_hsa <- all_inc %>%
select(state, hsa_nci_id, week_end) %>%
group_by(state, hsa_nci_id) %>%
summarise(max_week_end = max(week_end),
min_week_end = min(week_end),
n = n()) %>%
filter(max_week_end == '2025-07-26')
lower48 <- c(state.name, "District of Columbia")  # 48 states  + DC
lower48 <- setdiff(lower48, c("Alaska", "Hawaii")) # not include Alaska and Hawaii
df_conus <- df_pred %>%
filter(state %in% lower48) %>%
mutate(available = ifelse(is.na(diff_wis_season), 1, 0))
us_map1 <- us_map %>%
filter(state %in% lower48) %>%
left_join(avail_hsa %>%
filter(n == 148), by = c("state", "hsa_nci_id")) %>%
mutate(available = ifelse(is.na(n), 0, 1))
hsa_included_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
aes(fill = factor(available)), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
scale_fill_manual(values = c("0" = "white", "1" = "skyblue"),
name = "",
labels = c("Not in Data", "HSA in Data")) +
coord_sf() +
theme_void() +
theme(
legend.text  = element_text(size = 20)
)
in_data_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(df_conus), "geometry_hsa"),
aes(fill = diff_wis_season), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
fill = NA, color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
scale_fill_viridis_c(option = "magma", direction = 1, na.value = "white",
name = "diff wis season") +
coord_sf() + theme_void() +
labs(title = "diff wis season")
unavail_hsa <- us_map1 %>%
as.data.frame() %>%              # 혹시 tibble이면 sf 변환 위해
sf::st_as_sf() %>%
sf::st_set_geometry("geometry_hsa") %>%
dplyr::filter(available == 0, population_hsa > 250000)
predicted_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(df_conus), "geometry_hsa"),
aes(fill = diff_wis_season_hat), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
fill = NA, color = 'gray20') +
geom_sf(data = unavail_hsa,
fill = NA, color = "red", linewidth = 0.5) +
scale_fill_viridis_c(option = "magma", direction = 1, na.value = "white",
name = "Prediction",
limits = c(min(df_pred$diff_wis_season, na.rm = TRUE),
max(df_pred$diff_wis_season, na.rm = TRUE))) +
coord_sf() + theme_void() +
labs(title = "Prediction")
hsa_included_map
hsa_included_map + in_data_map + predicted_map
?bart
```{r, fig.height = 10, fig.width = 10}
hsa_included_map / in_data_map / predicted_map
vars = c("pop_ratio","pct_urban","population_state","density_state",
"density_hsa","n_hsa","area_km2_hsa","area_km2_state")
predictor_szn = Predictor$szn(
model = bart_fit_szn,
data  = as.data.frame(df_var[ , vars]),
y     = df_var$diff_wis_season,
predict.function = function(object, newdata) {
colMeans(predict(object, newdata = newdata))
}
)
vars = c("pop_ratio","pct_urban","population_state","density_state",
"density_hsa","n_hsa","area_km2_hsa","area_km2_state")
predictor_szn = Predictor$new(
model = bart_fit_szn,
data  = as.data.frame(df_var[ , vars]),
y     = df_var$diff_wis_season,
predict.function = function(object, newdata) {
colMeans(predict(object, newdata = newdata))
}
)
all_shap_szn = rbindlist(lapply(1:nrow(df_var), function(i) {
sh = Shapley$new(
predictor_szn,
x.interest = df_var[i, vars],
sample.size   = 50
)
out = sh$results
out$obs = i
out
}))
global_imp_szn = all_shap_szn[, .(mean_abs_phi = mean(abs(phi))), by = feature]
knitr::kable(global_imp_szn[order(-mean_abs_phi)], caption = "(Season) Features by importance (descending)")
ggplot(global_imp_szn, aes(x = reorder(feature, mean_abs_phi), y = mean_abs_phi)) +
geom_col(fill='skyblue', col='black') +
coord_flip() +
labs(x = "Feature", y = "Mean of absolute value of SHAP",
title = "(Season) Global SHAP feature importance")
predictor_overall = Predictor$new(
model = bart_fit_overall,
data  = as.data.frame(df_var[ , vars]),
y     = df_var$diff_wis_season,
predict.function = function(object, newdata) {
colMeans(predict(object, newdata = newdata))
}
)
all_shap_overall = rbindlist(lapply(1:nrow(df_new), function(i) {
sh = Shapley$new(
predictor_overall,
x.interest = df_var[i, vars],
sample.size   = 50
)
out = sh$results
out$obs = i
out
}))
predictor_overall = Predictor$new(
model = bart_fit_overall,
data  = as.data.frame(df_var[ , vars]),
y     = df_var$diff_wis_season,
predict.function = function(object, newdata) {
colMeans(predict(object, newdata = newdata))
}
)
all_shap_overall = rbindlist(lapply(1:nrow(df_var), function(i) {
sh = Shapley$new(
predictor_overall,
x.interest = df_var[i, vars],
sample.size   = 50
)
out = sh$results
out$obs = i
out
}))
global_imp_overall = all_shap_overall[, .(mean_abs_phi = mean(abs(phi))), by = feature]
knitr::kable(global_imp_overall[order(-mean_abs_phi)], caption = "(Overall) Features by importance (descending)")
ggplot(global_imp_overall, aes(x = reorder(feature, mean_abs_phi), y = mean_abs_phi)) +
geom_col(fill='skyblue', col='black') +
coord_flip() +
labs(x = "Feature", y = "Mean of absolute value of SHAP",
title = "(Overall) Global SHAP feature importance")
global_imp_overall = all_shap_overall[, .(mean_abs_phi = mean(abs(phi))), by = feature]
knitr::kable(global_imp_overall[order(-mean_abs_phi)], caption = "(Overall) Features by importance (descending)")
#all_inc <- read.csv("Local-level-forecasting/data/hsa_state_inc.csv")
all_inc <- readr::read_csv("../hsa_state_inc.csv", show_col_types = FALSE)
avail_hsa <- all_inc %>%
select(state, hsa_nci_id, week_end) %>%
group_by(state, hsa_nci_id) %>%
summarise(max_week_end = max(week_end),
min_week_end = min(week_end),
n = n()) %>%
filter(max_week_end == '2025-07-26')
lower48 <- c(state.name, "District of Columbia")  # 48 states  + DC
lower48 <- setdiff(lower48, c("Alaska", "Hawaii")) # not include Alaska and Hawaii
df_conus <- df_pred %>%
filter(state %in% lower48) %>%
mutate(available = ifelse(is.na(diff_wis_season), 1, 0))
df_250 <- us_map %>%
filter(population_hsa >= 250000) %>%
select(state, hsa_nci_id, population_hsa, population_state, density_state,
density_hsa, pct_urban, pop_ratio, geometry_hsa, geometry) %>%
distinct() %>%
distinct() %>%
left_join(df_var %>%
ungroup() %>%
filter(season == '2023/24') %>%
select(state, hsa_nci_id, diff_wis_season),
by = c("state", "hsa_nci_id"))
us_map = readRDS("../us_map_pop_sf.rds")
df_250 <- us_map %>%
filter(population_hsa >= 250000) %>%
select(state, hsa_nci_id, population_hsa, population_state, density_state,
density_hsa, pct_urban, pop_ratio, geometry_hsa, geometry) %>%
distinct() %>%
distinct() %>%
left_join(df_var %>%
ungroup() %>%
filter(season == '2023/24') %>%
select(state, hsa_nci_id, diff_wis_season),
by = c("state", "hsa_nci_id"))
bart_fit = bart(
x.train = df_var[, c("pop_ratio","pct_urban",
"density_state","density_hsa")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
overall2 = read.csv("../forecasting_metrics_overall.csv")
pop_desc = read.csv("../us_hsa_county_popdesc.csv")
us_hsa_county_popdesc_bygroup <- pop_desc %>%
select(state, hsa_nci_id, area_km2_hsa, area_km2_state, n_hsa) %>%
distinct()
overall <- overall2 %>%
left_join(us_hsa_county_popdesc_bygroup, by = c("state", "hsa_nci_id"))
df_var <- overall %>%
filter(season == "2023/24", horizon == 3) %>%
distinct()
bart_fit = bart(
x.train = df_var[, c("pop_ratio","pct_urban",
"density_state","density_hsa")],
y.train = df_var$diff_wis_season,
verbose = FALSE, keeptrees = TRUE)
bart_vi = as.data.frame(bart_fit$varcount) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = everything(),
names_to = "variable",
values_to = "avg")
pred_old = predict(bart_fit, newdata = df_var)
bart_predictions = as.data.frame(t(apply(pred_old, 2, quantile, probs = c(0.025, 0.975))))
colnames(bart_predictions) = c("ci_low", "ci_high")
bart_predictions$estimate = (bart_predictions$ci_low + bart_predictions$ci_high) / 2
bart_predictions$observed = df_var$diff_wis_season
coverage_95_bart = mean(
bart_predictions$observed >= bart_predictions$ci_low &
bart_predictions$observed <= bart_predictions$ci_high,
na.rm = TRUE
)
df_250 <- us_map %>%
filter(population_hsa >= 250000) %>%
select(state, hsa_nci_id, population_hsa, population_state, density_state,
density_hsa, pct_urban, pop_ratio, geometry_hsa, geometry) %>%
distinct() %>%
distinct() %>%
left_join(df_var %>%
ungroup() %>%
filter(season == '2023/24') %>%
select(state, hsa_nci_id, diff_wis_season),
by = c("state", "hsa_nci_id"))
pred <- predict(bart_fit, newdata = df_250) # picked the better one
df_pred <- df_250 %>%
mutate(
diff_wis_season_hat = apply(pred, 2, mean),
lwr95               = apply(pred, 2, quantile, 0.025),
upr95               = apply(pred, 2, quantile, 0.975)
)
#all_inc <- read.csv("Local-level-forecasting/data/hsa_state_inc.csv")
all_inc <- readr::read_csv("../hsa_state_inc.csv", show_col_types = FALSE)
avail_hsa <- all_inc %>%
select(state, hsa_nci_id, week_end) %>%
group_by(state, hsa_nci_id) %>%
summarise(max_week_end = max(week_end),
min_week_end = min(week_end),
n = n()) %>%
filter(max_week_end == '2025-07-26')
lower48 <- c(state.name, "District of Columbia")  # 48 states  + DC
lower48 <- setdiff(lower48, c("Alaska", "Hawaii")) # not include Alaska and Hawaii
df_conus <- df_pred %>%
filter(state %in% lower48) %>%
mutate(available = ifelse(is.na(diff_wis_season), 1, 0))
us_map1 <- us_map %>%
filter(state %in% lower48) %>%
left_join(avail_hsa %>%
filter(n == 148), by = c("state", "hsa_nci_id")) %>%
mutate(available = ifelse(is.na(n), 0, 1))
hsa_included_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
aes(fill = factor(available)), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
scale_fill_manual(values = c("0" = "white", "1" = "skyblue"),
name = "",
labels = c("Not in Data", "HSA in Data")) +
coord_sf() +
theme_void() +
theme(
legend.text  = element_text(size = 20)
)
in_data_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(df_conus), "geometry_hsa"),
aes(fill = diff_wis_season), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
fill = NA, color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
scale_fill_viridis_c(option = "magma", direction = 1, na.value = "white",
name = "diff wis season") +
coord_sf() + theme_void() +
labs(title = "diff wis season")
unavail_hsa <- us_map1 %>%
as.data.frame() %>%              # 혹시 tibble이면 sf 변환 위해
sf::st_as_sf() %>%
sf::st_set_geometry("geometry_hsa") %>%
dplyr::filter(available == 0, population_hsa > 250000)
predicted_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(df_conus), "geometry_hsa"),
aes(fill = diff_wis_season_hat), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
fill = NA, color = 'gray20') +
geom_sf(data = unavail_hsa,
fill = NA, color = "red", linewidth = 0.5) +
scale_fill_viridis_c(option = "magma", direction = 1, na.value = "white",
name = "Prediction",
limits = c(min(df_pred$diff_wis_season, na.rm = TRUE),
max(df_pred$diff_wis_season, na.rm = TRUE))) +
coord_sf() + theme_void() +
labs(title = "Prediction")
hsa_included_map / in_data_map / predicted_map
library(formatR)
install.packages("formatR")
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(tigris)
library(stringr)
library(sf)
library(lubridate)
library(patchwork)
library(corrplot)
library(mosaic)
library(moderndive)
library(effectsize)
library(tidyr)
library(caret)
library(purrr)
library(fastDummies)
library(GGally)
library(formatR)
library(dbarts)
library(iml)
#all_inc <- read.csv("Local-level-forecasting/data/hsa_state_inc.csv")
all_inc <- readr::read_csv("../hsa_state_inc.csv", show_col_types = FALSE)
avail_hsa <- all_inc %>%
select(state, hsa_nci_id, week_end) %>%
group_by(state, hsa_nci_id) %>%
summarise(max_week_end = max(week_end),
min_week_end = min(week_end),
n = n()) %>%
filter(max_week_end == '2025-07-26')
lower48 <- c(state.name, "District of Columbia")  # 48 states  + DC
lower48 <- setdiff(lower48, c("Alaska", "Hawaii")) # not include Alaska and Hawaii
df_conus <- df_pred %>%
filter(state %in% lower48) %>%
mutate(available = ifelse(is.na(diff_wis_season), 1, 0))
us_map1 <- us_map %>%
filter(state %in% lower48) %>%
left_join(avail_hsa %>%
filter(n == 148), by = c("state", "hsa_nci_id")) %>%
mutate(available = ifelse(is.na(n), 0, 1))
hsa_included_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
aes(fill = factor(available)), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
scale_fill_manual(values = c("0" = "white", "1" = "skyblue"),
name = "",
labels = c("Not in Data", "HSA in Data")) +
coord_sf() +
theme_void() +
theme(
legend.text  = element_text(size = 20)
)
in_data_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(df_conus), "geometry_hsa"),
aes(fill = diff_wis_season), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
fill = NA, color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
scale_fill_viridis_c(option = "magma", direction = 1, na.value = "white",
name = "diff wis season") +
coord_sf() + theme_void() +
labs(title = "diff wis season")
unavail_hsa <- us_map1 %>%  as.data.frame() %>% sf::st_as_sf() %>% sf::st_set_geometry("geometry_hsa") %>% dplyr::filter(available == 0, population_hsa > 250000)
predicted_map = ggplot() +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(df_conus), "geometry_hsa"),
aes(fill = diff_wis_season_hat), color = 'gray20') +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry"),
fill = NA, color = "grey20", linewidth = 0.25) +
geom_sf(data = sf::st_set_geometry(sf::st_as_sf(us_map1), "geometry_hsa"),
fill = NA, color = 'gray20') +
geom_sf(data = unavail_hsa,
fill = NA, color = "red", linewidth = 0.5) +
scale_fill_viridis_c(option = "magma", direction = 1, na.value = "white",
name = "Prediction",
limits = c(min(df_pred$diff_wis_season, na.rm = TRUE),
max(df_pred$diff_wis_season, na.rm = TRUE))) +
coord_sf() + theme_void() +
labs(title = "Prediction")
rm(us_map1, df_conus, unavail_hsa)
